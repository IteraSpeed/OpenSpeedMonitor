before_cache:
  - rm -f $HOME/.gradle/caches/modules-2/modules-2.lock
cache:
  directories:
    - node_modules
    - frontend/node_modules
    - build/npm
    - $HOME/.npm
    - $HOME/.gradle/caches/
    - $HOME/.gradle/wrapper/
language: groovy
jdk:
  - openjdk8

services:
  - docker

# Skip the install step. Don't `go get` dependencies. Only build with the code
# in vendor/
install: true

# Don't email me the results of the test runs.
notifications:
  email:
    on_success: never
    on_failure: always

# get google-chrome-stable
addons:
  chrome: stable

# Install ChromeDriver
#install:
#  - wget -N https://chromedriver.storage.googleapis.com/2.41/chromedriver_linux64.zip -P ~/
#  - unzip ~/chromedriver_linux64.zip -d ~/
#  - rm ~/chromedriver_linux64.zip
#  - sudo mv -f ~/chromedriver /usr/local/share/
#  - sudo chmod +x /usr/local/share/chromedriver
#  - sudo ln -s /usr/local/share/chromedriver /usr/local/bin/chromedriver

jobs:
  include:
#  - stage: Tests
#    name: "unitTests"
#    script:
#    - ./gradlew -x jasmineRun -x angularTests test
#  - name: "integrationTests"
#    script:
#    - ./gradlew integrationTest --tests "de.iteratec.osm.**"  --stacktrace
#  - name: "gebTests"
#    script:
#    - whereis google-chrome-stable
#    - whereis chromedriver
#    - ./gradlew integrationTest --tests "geb.**.*"  --stacktrace
#  - name: "jasmineTests"
#    script:
#    - ./gradlew jasmineRun
#  - name: "angularTests"
#    script:
#    - ./gradlew angularTests
  - stage: Build and Push Docker Image for Develop
    if: branch = develop
    script: skip # You do not want to run the tests again
    deploy:
      provider: script
      script:
          groovy scripts/ci/building/set_new_versionnumber_travis_dev;
          ./gradlew assemble;
          echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin;
          docker build -t iteratec/openspeedmonitor:develop .;
          docker push iteratec/openspeedmonitor:develop;
          curl --user $BAMBOO_TU_USERNAME:$BAMBOO_TU_PASSWORD -X POST -d "$STAGE_NAME&ExecuteAllStages" $BAMBOO_BUILD_ADDRESS;
          git stash -u; # in order to prevent double checking of cached resources
      on:
        branch: develop
  - stage: Build and Push Docker Image for Release
    if: branch = feature/travisRelease
    script: skip
    deploy:
      provider: script
      script:
#          ./gradlew assemble;
#          echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin;
#          docker build iteratec/openspeedmonitor .;
#          groovy scripts/ci/building/set_new_versionnumber;
#          sudo chmod +x scripts/ci/building/push_and_tag_dockerimage_travis.sh;
#          bash scripts/ci/building/push_and_tag_dockerimage_travis.sh;
#          curl --user $BAMBOO_TU_USERNAME:$BAMBOO_TU_PASSWORD -X POST -d "$STAGE_NAME&ExecuteAllStages" $BAMBOO_RELEASE_BUILD_ADDRESS
#          git stash -u;
          #     merge release into dev after success
          #     merge release into master after success
      on:
        branch: feature/travisRelease

